= swagger = (Resque - Redis) + ActiveRecord
 
Swagger allows you to use Resque full featured by only adding one table in your existing database.
 
Resque is a great library for creating/running/administering background jobs. Redis is great too but may be overkill for just a few simple background jobs. Swagger marries the power and robustness of Resque with the trivial setup of delayed_job. 
 
== Getting Started

 1. Add resque and swagger to your gem dependencies (order is important)

   config.gem 'resque'
   config.gem 'swagger'

 2. In your rails app, create the file initializers/resque.rb with the following:

   Resque.swagger! 
   Resque.connect_to_database YAML::load(ERB.new(IO.read(File.join(File.dirname(__FILE__), '..', 'database.yml'))).result)[RAILS_ENV]
    
 3. Create an active record migration
    
   create_table :resque_values do |table|
     table.column :key,      :string
     table.column :key_type, :string
     table.column :value, :text
   end
  
   add_index :resque_values, :key
   add_index :resque_values, [:key, :key_type]

 NOTE: To start up the administration sinatra app with swagger, do the following: resque-web config/initializers/resque.rb

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 Matthew Deiters. See LICENSE for details.
